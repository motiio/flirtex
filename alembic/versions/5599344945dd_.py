"""

Revision ID: 5599344945dd
Revises: 
Create Date: 2023-05-16 16:40:29.892742

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "5599344945dd"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "interest",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=32), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
        schema="core",
    )
    op.create_table(
        "region",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=32), nullable=True),
        sa.Column("type", sa.String(length=8), nullable=True),
        sa.Column("country_code", sa.String(length=8), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        schema="core",
    )
    op.create_table(
        "user",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("tg_id", sa.Integer(), nullable=True),
        sa.Column("tg_username", sa.String(), nullable=True),
        sa.Column("tg_first_name", sa.String(), nullable=True),
        sa.Column("tg_last_name", sa.String(), nullable=True),
        sa.Column("tg_is_premium", sa.Boolean(), nullable=True),
        sa.Column("tg_language_code", sa.String(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("tg_id"),
        sa.UniqueConstraint("tg_username"),
        schema="core",
    )
    op.create_table(
        "city",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("level_name", sa.String(length=32), nullable=True),
        sa.Column("region", sa.Integer(), nullable=True),
        sa.Column("name", sa.String(length=32), nullable=True),
        sa.Column("type", sa.String(length=16), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["region"],
            ["core.region.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        schema="core",
    )
    op.create_table(
        "device_session",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user", sa.Integer(), nullable=True),
        sa.Column("refresh_token", sa.String(), nullable=False),
        sa.Column("expires_at", sa.DateTime(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("user_agent", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user"],
            ["core.user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        schema="core",
    )
    op.create_table(
        "profile",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("owner", sa.Integer(), nullable=True),
        sa.Column("name", sa.String(length=32), nullable=True),
        sa.Column("birthdate", sa.Date(), nullable=True),
        sa.Column("city", sa.Integer(), nullable=True, comment="Profile settlement"),
        sa.Column(
            "gender",
            sa.Enum("male", "female", "unknown", name="genderenum", schema="core"),
            nullable=True,
        ),
        sa.Column(
            "looking_gender",
            sa.Enum("male", "female", "unknown", name="genderenum", schema="core"),
            nullable=True,
        ),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["city"],
            ["core.city.id"],
        ),
        sa.ForeignKeyConstraint(
            ["owner"],
            ["core.user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        schema="core",
    )
    op.create_table(
        "profile_interests",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("profile_id", sa.Integer(), nullable=True),
        sa.Column("interest_id", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["interest_id"],
            ["core.interest.id"],
        ),
        sa.ForeignKeyConstraint(
            ["profile_id"],
            ["core.profile.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        schema="core",
    )
    op.create_table(
        "profile_photo",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("profile", sa.Integer(), nullable=True),
        sa.Column("s3_path", sa.String(length=128), nullable=True),
        sa.Column("display_order", sa.Integer(), nullable=True),
        sa.Column("is_valid", sa.Boolean(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["profile"],
            ["core.profile.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        schema="core",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("profile_photo", schema="core")
    op.drop_table("profile_interests", schema="core")
    op.drop_table("profile", schema="core")
    op.drop_table("device_session", schema="core")
    op.drop_table("city", schema="core")
    op.drop_table("user", schema="core")
    op.drop_table("region", schema="core")
    op.drop_table("interest", schema="core")
    # ### end Alembic commands ###
