user nginx;
worker_processes auto;
pid /run/nginx.pid;
error_log /var/log/nginx/error.log warn;

events {
    worker_connections 1024;
}

http {
    upstream api {
        server unix:/tmp/api/api.socket; # Указывает на ваш FastAPI через Unix-сокет
    }

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    client_max_body_size 10M;

    # Gzip Compression
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # SSL settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384";
    ssl_certificate /etc/letsencrypt/live/flirtex.fun-0001/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/flirtex.fun-0001/privkey.pem;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Proxy Buffers
    proxy_buffers 8 16k;
    proxy_buffer_size 32k;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-Content-Type-Options "nosniff";
    add_header X-XSS-Protection "1; mode=block";
    add_header Content-Security-Policy "default-src 'self';";

    # Server Tokens
    server_tokens off;

    # Rate limiting for authentication
    limit_req_zone $binary_remote_addr zone=auth_limit:10m rate=1r/s;

    # Server block for the frontend
    server {
        listen 443 ssl http2;
        server_name flirtex.fun;

        ssl_certificate /etc/letsencrypt/live/flirtex.fun-0001/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/flirtex.fun-0001/privkey.pem;

        root /var/www/app/public;
        index index.html;

        location / {
            try_files $uri $uri/ /index.html;
        }

        location /api {
            proxy_pass http://api;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_ssl_session_reuse off;
        }

        location /auth {
            limit_req zone=auth_limit burst=5 nodelay;
            proxy_pass http://api;
        }
    }

    # HTTP to HTTPS redirect for both domains
    server {
        listen 80;
        server_name flirtex.fun;
        return 301 https://$host$request_uri;
    }
}
